% Encoding: UTF-8

@InProceedings{Abro2017,
  author    = {Abro, Fauzia Idrees and Rajarajan, Muttukrishnan and Chen, Thomas M. and Rahulamathavan, Yogachandran},
  title     = {{Android} application collusion demystified},
  booktitle = {Future Network Systems and Security},
  year      = {2017},
  editor    = {Doss, Robin and Piramuthu, Selwyn and Zhou, Wei},
  pages     = {176--187},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {Application collusion is an emerging threat to Android based devices. In app collusion, two or more apps collude in some manner to perform a malicious action that they are unable to do independently. Detection of colluding apps is a challenging task. Existing commercial malware detection systems analyse each app separately, hence fail to detect any joint malicious action performed by multiple apps through collusion. In this paper, we discuss the current state of research on app collusion and open challenges to the detection of colluding apps. We compare existing approaches and present an integrated approach to effectively detect app collusion.},
  doi       = {10.1007/978-3-319-65548-2_14},
  file      = {:Abro2017 - Android Application Collusion Demystified.pdf:PDF},
  isbn      = {978-3-319-65548-2},
  owner     = {Ervin Oro},
  timestamp = {20-01-2019},
  url       = {http://openaccess.city.ac.uk/18503/},
}

@Article{Asavoae2016,
  author      = {Irina Mariuca Asavoae and Jorge Blasco and Thomas M. Chen and Harsha Kumara Kalutarage and Igor Muttik and Hoang Nga Nguyen and Markus Roggenbach and Siraj Ahmed Shaikh},
  title       = {Towards automated {Android} app collusion detection},
  journal     = {{arXiv} preprint {arXiv}:1603.02308},
  year        = {2016},
  abstract    = {Android OS supports multiple communication methods between apps. This opens the possibility to carry out threats in a collaborative fashion, c.f. the Soundcomber example from 2011. In this paper we provide a concise definition of collusion and report on a number of automated detection approaches, developed in co-operation with Intel Security.},
  comment     = {definition, filtering, ai, model},
  date        = {2016-03-07},
  eprint      = {http://arxiv.org/abs/1603.02308v1},
  eprintclass = {cs.SE},
  eprinttype  = {arXiv},
  file        = {:Asavoae2016 - Towards Automated Android App Collusion Detection.pdf:PDF},
  owner       = {Ervin Oro},
  timestamp   = {29-01-2019},
  url         = {https://arxiv.org/abs/1603.02308},
}

@InCollection{Asavoae2017,
  author    = {Irina M{\u{a}}riuca As{\u{a}}voae and Jorge Blasco and Thomas M. Chen and Harsha Kumara Kalutarage and Igor Muttik and Hoang Nga Nguyen and Markus Roggenbach and Siraj Ahmed Shaikh},
  title     = {Detecting malicious collusion between mobile software applications: the {Android\textsuperscript{TM}} case},
  booktitle = {Data Analytics and Decision Support for Cybersecurity},
  publisher = {Springer International Publishing},
  year      = {2017},
  pages     = {55--97},
  month     = aug,
  comment   = {definition},
  doi       = {10.1007/978-3-319-59439-2_3},
  file      = {:Asavoae2017 - Detecting Malicious Collusion between Mobile Software Applications_ the Android^TM Case.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
}

@InProceedings{Asavoae2018,
  author    = {As{\u{a}}voae, Irina M{\u{a}}riuca and Nguyen, Hoang Nga and Roggenbach, Markus},
  title     = {Software model checking for mobile security -- collusion detection in {$\mathbb{K}$}},
  booktitle = {Model Checking Software},
  year      = {2018},
  editor    = {Gallardo, Mar{\'i}a del Mar and Merino, Pedro},
  pages     = {3--25},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {Mobile devices pose a particular security risk because they hold personal details and have capabilities potentially exploitable for eavesdropping. The Android operating system is designed with a number of built-in security features such as application sandboxing and permission-based access control. Unfortunately, these restrictions can be bypassed, without the user noticing, by colluding apps whose combined permissions allow them to carry out attacks that neither app is able to execute by itself. In this paper, we develop a software model-checking approach within the {\$}{\$}{\backslash}mathbb {\{}K{\}}{\$}{\$}Kframework that is capable to detect collusion. This involves giving an abstract, formal semantics to Android applications and proving that the applied abstraction principles lead to a finite state space.},
  doi       = {10.1007/978-3-319-94111-0_1},
  file      = {:Asavoae2018 - Software Model Checking for Mobile Security – Collusion Detection in K.pdf:PDF},
  isbn      = {978-3-319-94111-0},
  owner     = {Ervin Oro},
  timestamp = {20-01-2019},
  url       = {https://link.springer.com/chapter/10.1007/978-3-319-94111-0_1},
}

@Misc{AWSLLC2018,
  author    = {{Awio Web Services LLC}},
  title     = {Browser \& platform market share},
  month     = dec,
  year      = {2018},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {https://www.w3counter.com/globalstats.php?year=2018&month=12},
}

@InProceedings{Blasco2016,
  author    = {Blasco, Jorge and Roggenbach, Markus and Chen, Thomas and Muttik, Igor},
  title     = {Wild {Android} collusions},
  booktitle = {VB2016},
  year      = {2016},
  month     = oct,
  comment   = {MoPlus SDK},
  file      = {:Blasco2016 - Wild Android Collusions.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {29-01-2019},
  url       = {https://www.virusbulletin.com/conference/vb2016/abstracts/wild-android-collusions},
}

@Article{Chen2018a,
  author         = {Chen, Hongyi and Su, Jinshu and Qiao, Linbo and Xin, Qin},
  title          = {Malware collusion attack against {SVM}: issues and countermeasures},
  journal        = {Applied Sciences},
  year           = {2018},
  volume         = {8},
  number         = {10},
  issn           = {2076-3417},
  abstract       = {Android has become the most popular mobile platform, and a hot target for malware developers. At the same time, researchers have come up with numerous ways to deal with malware. Among them, machine learning based methods are quite effective in Android malware detection, the accuracy of which can be as high as 98%. Thus, malware developers have the incentives to develop more advanced malware to evade detection. This paper presents an adversary attack scenario (Collusion Attack) that will compromise current machine learning based malware detection methods, especially Support Vector Machines (SVM). The malware developers can perform this attack easily by splitting malicious payload into two or more apps. Meanwhile, attackers may hide their malicious behavior by using advanced techniques (Evasion Attack), such as obfuscation, etc. According to our simulation, 87.4% of apps can evade Linear SVM by Collusion Attack. When performing Collusion and Evasion Attack simultaneously, the evasion rate can reach 100% at a low cost. Thus, we proposed a method to deal with this issue. This approach, realized in a tool, called ColluDroid, can identify the collusion apps by analyzing the communication between apps. In addition, it can integrate secure learning methods (e.g., Sec-SVM) to fight against Evasion Attack. The evaluation results show that ColluDroid is effective in finding out the collusion apps and ColluDroid-Sec-SVM has the best performance in the presence of both Collusion and Evasion Attack.},
  article-number = {1718},
  doi            = {10.3390/app8101718},
  file           = {:Chen2018a - Malware Collusion Attack against SVM_ Issues and Countermeasures.pdf:PDF},
  owner          = {Ervin Oro},
  timestamp      = {20-01-2019},
  url            = {http://www.mdpi.com/2076-3417/8/10/1718},
}

@InProceedings{Chen2018,
  author    = {Chen, Hongyi and Su, Jinshu and Qiao, Linbo and Zhang, Yi and Xin, Qin},
  title     = {Malware collusion attack against machine learning based methods: issues and countermeasures},
  booktitle = {Cloud Computing and Security},
  year      = {2018},
  editor    = {Sun, Xingming and Pan, Zhaoqing and Bertino, Elisa},
  pages     = {465--477},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {Android has become the most popular platform for mobile devices, and also it has become a popular target for malware developers. At the same time, researchers have proposed a large number of methods, both static and dynamic analysis methods, to fight against malwares. Among these, Machine learning based methods are quite effective in Android malware detection, the accuracy of which can be up to 98{\%}. Thus, malware developers have the incentives to develop more advanced malwares to evade detection. This paper presents an adversary attack pattern that will compromise current machine learning based malware detection methods. The malware developers can perform this attack easily by splitting malicious payload into two or more apps. The split apps will all be classified as benign by current methods. Thus, we proposed a method to deal with this issue. This approach, realized in a tool, called ColluDroid, can identify the collusion apps by analyzing the communication between apps. The evaluation results show that ColluDroid is effective in finding out the collusion apps. Also, we showed that it's easy to split an app to evade detection. According to our split simulation, the evasion rate is 78{\%}, when split into two apps; while the evasion rate comes to 94.8{\%}, when split into three apps.},
  doi       = {10.1007/978-3-030-00018-9_41},
  file      = {:Chen2018 - Malware Collusion Attack against Machine Learning Based Methods_ Issues and Countermeasures.pdf:PDF},
  isbn      = {978-3-030-00018-9},
  owner     = {Ervin Oro},
  timestamp = {20-01-2019},
  url       = {https://link.springer.com/chapter/10.1007/978-3-030-00018-9_41},
}

@InCollection{Davidson2018,
  author    = {Drew Davidson and Vaibhav Rastogi and Mihai Christodorescu and Somesh Jha},
  title     = {Enhancing {Android} security through app splitting},
  booktitle = {Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering},
  publisher = {Springer International Publishing},
  year      = {2018},
  pages     = {24--44},
  doi       = {10.1007/978-3-319-78813-5_2},
  file      = {:Davidson2018 - Enhancing Android Security through App Splitting.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {27-01-2019},
}

@Article{Elish2018,
  author    = {K. Elish and H. Cai and D. Barton and D. Yao and B. Ryder},
  title     = {Identifying mobile inter-app communication risks},
  journal   = {IEEE Transactions on Mobile Computing},
  year      = {2018},
  issn      = {1558-0660},
  doi       = {10.1109/TMC.2018.2889495},
  file      = {:Elish2018 - Identifying Mobile Inter App Communication Risks.pdf:PDF},
  keywords  = {Security;Malware;Feature extraction;Mobile computing;Sensitivity;Complexity theory;Standards;Android ICC;inter-app analysis;malware collusion;static analysis;risk assessment},
  owner     = {Ervin Oro},
  timestamp = {20-01-2019},
  url       = {https://ieeexplore.ieee.org/document/8587187},
}

@Booklet{AVTESTGH2018,
  title     = {Security report 2017/18},
  author    = {{AV-TEST GmbH}},
  month     = jul,
  year      = {2018},
  file      = {:AVTESTGH2018 - Security Report 2017_18.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {https://www.av-test.org/en/news/the-av-test-security-report-20172018-the-latest-analysis-of-the-it-threat-scenario/},
}

@Misc{Google2017,
  author    = {{Google, Inc.}},
  title     = {The {Google Android Security Team}’s classifications for potentially harmful applications},
  month     = feb,
  year      = {2017},
  file      = {:Google2017 - The Google Android Security Team’s Classifications for Potentially Harmful Applications.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {20-01-2019},
  url       = {https://source.android.com/security/reports/Google_Android_Security_PHA_classifications.pdf},
}

@Misc{McAfee2016,
  author    = {{McAfee}},
  title     = {Safeguarding against colluding mobile apps},
  month     = may,
  year      = {2016},
  comment   = {claims perfect solution against collusion},
  file      = {:McAfee2016 - Safeguarding against Colluding Mobile Apps.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {https://www.mcafee.com/enterprise/en-us/assets/solution-briefs/sb-quarterly-threats-may-2016-1.pdf},
}

@Booklet{McAfee2018,
  title     = {Mobile threat report},
  author    = {{McAfee}},
  month     = apr,
  year      = {2018},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
}

@InCollection{Muttik2016,
  author    = {Muttik, Igor},
  title     = {Partners in crime: investigating mobile app collusion},
  booktitle = {{McAfee Labs} threats report},
  publisher = {{McAfee}},
  year      = {2016},
  pages     = {8--15},
  month     = jun,
  comment   = {additional manual & heuristical cues for detection
},
  file      = {:Cheng2016 - McAfee Labs Threats Report.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {https://www.mcafee.com/enterprise/en-us/assets/reports/rp-quarterly-threats-may-2016.pdf},
}

@Misc{AOSP2019b,
  author    = {{Android Open Source Project}},
  title     = {Application security},
  year      = {2019},
  owner     = {Ervin Oro},
  timestamp = {28-01-2019},
  url       = {https://source.android.com/security/overview/app-security},
}

@Misc{AOSP2019,
  author    = {{Android Open Source Project}},
  title     = {Security},
  year      = {2019},
  owner     = {Ervin Oro},
  timestamp = {28-01-2019},
  url       = {https://source.android.com/security},
}

@Misc{AOSP2018,
  author    = {{Android Open Source Project} and others},
  title     = {{Android} security 2017 year in review},
  month     = mar,
  year      = {2018},
  comment   = {play protect against collusion?},
  file      = {:AOSP2018 - Android Security 2017 Year in Review.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {https://source.android.com/security/reports/Google_Android_Security_2017_Report_Final.pdf},
}

@InProceedings{Qiu2018,
  author    = {Lina Qiu and Yingying Wang and Julia Rubin},
  title     = {Analyzing the analyzers: {FlowDroid}/{IccTA}, {AmanDroid}, and {DroidSafe}},
  booktitle = {Proceedings of the 27th {ACM} {SIGSOFT} International Symposium on Software Testing and Analysis - {ISSTA} 2018},
  year      = {2018},
  publisher = {{ACM} Press},
  doi       = {10.1145/3213846.3213873},
  file      = {:Qiu2018 - Analyzing the Analyzers_ FlowDroid_IccTA, AmanDroid, and DroidSafe.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {27-01-2019},
}

@InProceedings{Schlegel2011,
  author    = {Roman Schlegel and Kehuan Zhang and Xiao{-}yong Zhou and Mehool Intwala and Apu Kapadia and XiaoFeng Wang},
  title     = {Soundcomber: {A} stealthy and context-aware sound trojan for smartphones},
  booktitle = {Proceedings of the Network and Distributed System Security Symposium, {NDSS}{\textquotesingle}2011},
  year      = {2011},
  month     = jan,
  comment   = {artificial collusion example; to-read!},
  file      = {:Schlegel2011 - Soundcomber_ a Stealthy and Context Aware Sound Trojan for Smartphones.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {https://www.researchgate.net/publication/221655538_Soundcomber_A_Stealthy_and_Context-Aware_Sound_Trojan_for_Smartphones},
}

@InProceedings{Spreitzer2018,
  author    = {Raphael Spreitzer and Gerald Palfinger and Stefan Mangard},
  title     = {{SCAnDroid}: automated side-channel analysis of {Android} {APIs}},
  booktitle = {Proceedings of the 11th {ACM} Conference on Security {\&} Privacy in Wireless and Mobile Networks - {WiSec} {\textquotesingle}18},
  year      = {2018},
  publisher = {{ACM} Press},
  doi       = {10.1145/3212480.3212506},
  file      = {:Spreitzer2018 - SCAnDroid.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {29-01-2019},
}

@Misc{StatCounter2018,
  author    = {{StatCounter}},
  title     = {Operating system market share worldwide},
  month     = dec,
  year      = {2018},
  owner     = {Ervin Oro},
  timestamp = {30-01-2019},
  url       = {http://gs.statcounter.com/os-market-share},
}

@Article{Wei2018,
  author    = {Fengguo Wei and Sankardas Roy and Xinming Ou and Robby},
  title     = {{Amandroid}: {A} precise and general inter-component data flow analysis framework for security vetting of {Android} apps},
  journal   = {{ACM} Transactions on Privacy and Security},
  year      = {2018},
  volume    = {21},
  number    = {3},
  pages     = {1--32},
  month     = {apr},
  doi       = {10.1145/3183575},
  file      = {:Wei2018 - Amandroid.pdf:PDF},
  owner     = {Ervin Oro},
  publisher = {Association for Computing Machinery ({ACM})},
  timestamp = {27-01-2019},
}

@InCollection{Zhan2017,
  author    = {Jiawei Zhan and Quan Zhou and Xiaozhuo Gu and Yuewu Wang and Yingjiao Niu},
  title     = {Splitting third-party libraries' privileges from {Android} apps},
  booktitle = {Information Security and Privacy},
  publisher = {Springer International Publishing},
  year      = {2017},
  pages     = {80--94},
  month     = may,
  doi       = {10.1007/978-3-319-59870-3_5},
  file      = {:Zhan2017 - Splitting Third Party Libraries' Privileges from Android Apps.pdf:PDF},
  owner     = {Ervin Oro},
  timestamp = {29-01-2019},
}

@InCollection{OEDcollusion,
  title     = {collusion, n.},
  booktitle = {OED Online},
  publisher = {Oxford University Press},
  year      = {2018},
  month     = dec,
  owner     = {Ervin Oro},
  timestamp = {28-01-2019},
  url       = {http://www.oed.com/view/Entry/36460},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: saveOrderConfig:specified;author;false;year;false;title;false;}
